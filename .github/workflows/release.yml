name: Release

on:
  workflow_call:
    inputs:
      commit-name:
        default: Julien Ruaux
        type: string
        required: false
      branch:
        default: 'main'
        required: false
        type: string
      version:
        required: false
        type: string
      version-type:
        description: 'Version bump type (major, minor, patch). Ignored if version is explicitly set.'
        default: 'patch'
        required: false
        type: string
      jreleaser-version:
        default: 'latest'
        required: false
        type: string
      java-version:
        default: '21'
        required: false
        type: string
      tasks:
        default: 'build aggregateTestReports publish'
        required: false
        type: string
      build-docs:
        default: false
        required: false
        type: boolean
    secrets:
      commit-email:
        required: false
      github-user:
        required: false
      github-token:
        required: true
      gpg-passphrase:
        required: true
      gpg-public-key:
        required: true
      gpg-secret-key:
        required: true
      sonatype-username:
        required: false
      sonatype-password:
        required: false
      docker-username:
        required: false
      docker-password:
        required: false
      docker-github-username:
        required: false
      docker-github-password:
        required: false
      slack-webhook:
        required: false
      algolia-app-id:
        required: false
      algolia-api-key:
        required: false
      algolia-index-name:
        required: false

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.github-token }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Setup Gradle
        uses: redis-field-engineering/redis-github-workflows/.github/actions/setup-gradle@main
        with:
          java-version: ${{ inputs.java-version }}

      - name: Calculate Version
        id: calc_version
        uses: redis-field-engineering/redis-github-workflows/.github/actions/calculate-version@main
        with:
          version: ${{ inputs.version }}
          version-type: ${{ inputs.version-type }}

      - name: Set Release Version
        uses: redis-field-engineering/redis-github-workflows/.github/actions/set-version@main
        with:
          version: ${{ steps.calc_version.outputs.version }}
          commit: true
          commit-message: 'Releasing version {version}'
          commit-name: ${{ inputs.commit-name }}
          commit-email: ${{ secrets.commit-email }}
          push: true
          branch: ${{ inputs.branch }}

      - name: Build
        run: |
          ./gradlew -Pprofile=release -PreproducibleBuild=true ${{ inputs.tasks }} -S
        env:
          GRGIT_USER: ${{ secrets.github-user }}
          GRGIT_PASS: ${{ secrets.github-token }}

      - name: Upload test reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            build/reports/aggregate-tests/

      - name: Assemble
        uses: jreleaser/release-action@v2
        with:
          arguments: assemble
          version: ${{ inputs.jreleaser-version }}
        env:
          JRELEASER_PROJECT_VERSION: ${{ steps.calc_version.outputs.version }}

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release
          version: ${{ inputs.jreleaser-version }}
        env:
          JRELEASER_BRANCH: ${{ inputs.branch }}
          JRELEASER_DOCKER_GITHUB_USERNAME: ${{ secrets.docker-github-username }}
          JRELEASER_DOCKER_GITHUB_PASSWORD: ${{ secrets.docker-github-password }}
          JRELEASER_DOCKER_DEFAULT_USERNAME: ${{ secrets.docker-username }}
          JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.docker-password }}
          JRELEASER_GITHUB_PASSWORD: ${{ secrets.github-token }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.github-token }}
          JRELEASER_GITHUB_USERNAME: ${{ secrets.github-user }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.gpg-public-key }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.gpg-secret-key }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.sonatype-username }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.sonatype-password }}
          JRELEASER_PROJECT_VERSION: ${{ steps.calc_version.outputs.version }}
          JRELEASER_SLACK_WEBHOOK: ${{ secrets.slack-webhook }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Configure Pages
        if: inputs.build-docs
        uses: actions/configure-pages@v5

      - name: Build documentation
        if: inputs.build-docs
        uses: redis-field-engineering/redis-github-workflows/.github/actions/build-docs@main
        with:
          algolia-app-id: ${{ secrets.algolia-app-id }}
          algolia-api-key: ${{ secrets.algolia-api-key }}
          algolia-index-name: ${{ secrets.algolia-index-name }}

      - name: Upload Pages artifact
        if: inputs.build-docs
        uses: actions/upload-pages-artifact@v4
        with:
          path: build/site

      - name: Deploy to GitHub Pages
        if: inputs.build-docs
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Bump to Next Snapshot Version
        uses: redis-field-engineering/redis-github-workflows/.github/actions/bump-snapshot-version@main
        with:
          release-version: ${{ steps.calc_version.outputs.version }}
          commit: true
          commit-name: ${{ inputs.commit-name }}
          commit-email: ${{ secrets.commit-email }}
          push: true
          branch: ${{ inputs.branch }}
