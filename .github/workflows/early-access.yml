name: 'Early Access'

on:
  workflow_call:
    inputs:
      jreleaser-version:
        default: 'early-access'
        required: false
        type: string
      java-version:
        default: '8'
        required: false
        type: string
    secrets:
      github-token:
        required: true
      gpg-passphrase:
        required: true
      gpg-public-key:
        required: true
      gpg-secret-key:
        required: true

jobs:
  earlyaccess:
    name: 'Early Access'
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.github-token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'zulu'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: ${{ runner.os }}-gradlew-

      - name: Build
        run: ./gradlew -Prelease=true -PreproducibleBuild=true build aggregateTestReports aggregateJacocoReport -S
        
      - name: Upload test reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            build/reports/aggregate-tests/
  
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          arguments: release
          version: ${{ inputs.jreleaser-version }}
        env:
          JRELEASER_PROJECT_VERSION: ${{ steps.vars.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.github-token }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.gpg-public-key }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.gpg-secret-key }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
